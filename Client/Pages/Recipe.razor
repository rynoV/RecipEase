@page "/Recipe/{recipeId}"
@using RecipEase.Shared.Models.Api
@inject HttpClient Http
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject HttpClient Http

@if (RecipeViewed != null && uses != null)
{
    <h1>@RecipeViewed.Name</h1>

    <h2>Directions</h2>

    <p>
        @RecipeViewed.Steps
    </p>

    <h2>Ingredients</h2>
    <ul class="list-group list-group-flush mb-4">
        @foreach (var item in uses)
        {
            <li class="list-group-item d-flex justify-content-between align-items-center">
                @item.IngrName
                <span class="text-black-50">@item.Quantity @item.UnitName</span>
                <span class="text-black-50">@ingr[item].Rarity</span>
                <AddButton></AddButton>
            </li>
        }
    </ul>

    <h2>Nutrition</h2>
    <ul>
        <li>
            <p> <b>Calories:</b> @RecipeViewed.Calories mg. </p>
        </li>

        <li>
            <p> <b>Carbohydrates:</b> @RecipeViewed.Carbs mg. </p>
        </li>

        <li>
            <p> <b>Protein:</b> @RecipeViewed.Protein mg. </p>
        </li>

        <li>
            <p> <b>Sodium:</b> @RecipeViewed.Sodium mg. </p>
        </li>

        <li>
            <p> <b>Fat:</b> @RecipeViewed.Fat mg. </p>
        </li>

        <li>
            <p> <b>Cholesterol:</b> @RecipeViewed.Cholesterol mg. </p>
        </li>
    </ul>
}

@code {
    [Parameter]
    public string RecipeId { get; set; }

    public ApiRecipe RecipeViewed { get; set; }

    public IEnumerable<ApiUses> uses { get; set; }

    public IDictionary<ApiUses, ApiIngredient> ingr { get; set; }



    protected override async Task OnInitializedAsync()
    {
        ingr = new Dictionary<ApiUses, ApiIngredient>();

        try
        {
            String path = $"api/Recipe/{RecipeId}";
            RecipeViewed = await Http.GetFromJsonAsync<ApiRecipe>(path);
            uses = await Http.GetFromJsonAsync<IEnumerable<ApiUses>>($"api/Uses/{RecipeId}");
            foreach (ApiUses a in uses)
            {
                ApiIngredient i = await Http.GetFromJsonAsync<ApiIngredient>($"api/Ingr/{a.IngrName}");
                System.Console.WriteLine(i.GetType());
                ingr.Add(a, i);
            }
        }

        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }

}